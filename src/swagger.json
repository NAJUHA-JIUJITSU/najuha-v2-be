{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local Server"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "najuha-v2-be",
    "description": "",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/api-conventions/auth-guard": {
      "get": {
        "tags": ["api-conventions"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          },
          "1000": {
            "description": "AUTH_ACCESS_TOKEN_MISSING",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AUTH_ACCESS_TOKEN_MISSING"
                }
              }
            }
          },
          "1001": {
            "description": "AUTH_ACCESS_TOKEN_UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AUTH_ACCESS_TOKEN_UNAUTHORIZED"
                }
              }
            }
          },
          "1003": {
            "description": "AUTH_LEVEL_FORBIDDEN",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AUTH_LEVEL_FORBIDDEN"
                }
              }
            }
          }
        },
        "summary": "1 auth guard",
        "description": "1 auth guard.\n- Role Based Access Control (RBAC) 에 따라 권한이 없을 때 에러\n\nUserRoleLevel: PUBLIC, TEMPORARY_USER, USER, ADMIN\n- PUBLIC: accessToken 없이 호출 가능\n- TEMPORARY_USER: 회원가입이 완료되지 않은 사용료\n- USER: 회원가입이 완료된 사용자\n- ADMIN: 관리자",
        "x-nestia-namespace": "api-conventions.auth-guard.auth",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "api-conventions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/api-conventions/user-api-vs-admin-api": {
      "get": {
        "tags": ["api-conventions"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "2 user api vs admin api",
        "description": "2 user api vs admin api.\n\nuser api 비회원,사용자, 대회사 등이 사용하는 api 입니다.\n- endpoint: /user/*\n- RoleLevel: PUBLIC, TEMPORARY_USER, USER\n\nadmin api 관리자가 사용하는 api 입니다.\n- endpoint: /admin/*\n- RoleLevel: ADMIN",
        "x-nestia-namespace": "api-conventions.user-api-vs-admin-api.userApiVsAdminApi",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "api-conventions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/api-conventions/find-vs-get": {
      "get": {
        "tags": ["api-conventions"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "3 find vs get",
        "description": "3 find vs get.\n- find: 조회 대상이 존재하지 않을 때 null 혹은 빈 배열을 반환\n- get: 조회 대상이 존재하지 않을 때 에러 발생",
        "x-nestia-namespace": "api-conventions.find-vs-get.findVsGet",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "api-conventions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/api-conventions/update": {
      "get": {
        "tags": ["api-conventions"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "x-nestia-encrypted": false
          }
        },
        "summary": "4 update",
        "description": "4 update.\n- 업데이트 하려는 대상이 존재하지 않을 때 에러 발생",
        "x-nestia-namespace": "api-conventions.update.update",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "api-conventions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/auth/sns-login": {
      "post": {
        "tags": ["u-1 auth"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnsLoginReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "accessToken and refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormSnsLoginRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "2000": {
            "description": "SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER"
                }
              }
            }
          },
          "2001": {
            "description": "SNS_AUTH_KAKAO_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_KAKAO_LOGIN_FAIL"
                }
              }
            }
          },
          "2002": {
            "description": "SNS_AUTH_NAVER_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_NAVER_LOGIN_FAIL"
                }
              }
            }
          },
          "2003": {
            "description": "SNS_AUTH_GOOGLE_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_GOOGLE_LOGIN_FAIL"
                }
              }
            }
          }
        },
        "summary": "u-1-1 auth sns login",
        "description": "u-1-1 auth sns login.\n- RoleLevel: PUBLIC",
        "x-nestia-namespace": "user.auth.sns-login.snsLogin",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-1 auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "accessToken and refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/auth/token": {
      "post": {
        "tags": ["u-1 auth"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "accessToken and refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormRefreshTokenRet"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "1002": {
            "description": "AUTH_REFRESH_TOKEN_UNAUTHORIZED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AUTH_REFRESH_TOKEN_UNAUTHORIZED"
                }
              }
            }
          }
        },
        "summary": "u-1-2 auth toekn refresh",
        "description": "u-1-2 auth toekn refresh.\n- RoleLevel: PUBLIC",
        "x-nestia-namespace": "user.auth.token.refreshToken",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-1 auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "accessToken and refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/auth/acquire-admin-role": {
      "patch": {
        "tags": ["u-1 auth"],
        "parameters": [],
        "responses": {
          "201": {
            "description": "accessToken and refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormAcquireAdminRoleRet"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          },
          "1004": {
            "description": "AUTH_UNREGISTERED_ADMIN_CREDENTIALS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AUTH_UNREGISTERED_ADMIN_CREDENTIALS"
                }
              }
            }
          }
        },
        "summary": "u-1-3 auth acquire admin role",
        "description": "u-1-3 auth acquire admin role.\n- RoleLevel: USER\n- 관리자로 등록되어있는 유저를 관리자 역할로 변경합니다.\n- ADMIN 역할을 가진 accessToken 과 refreshToken 을 발급합니다.",
        "x-nestia-namespace": "user.auth.acquire-admin-role.aqureAdminRole",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-1 auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "accessToken and refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/user/register/users/me": {
      "get": {
        "tags": ["u-2 register"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetTemporaryUserRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          }
        },
        "summary": "u-2-1 get temporary user",
        "description": "u-2-1 get temporary user.\n- RoleLevel: TEMPORARY_USER.",
        "x-nestia-namespace": "user.register.users.me.getTemporaryUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-2 register",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/register/users/{nickname}/is-duplicated": {
      "get": {
        "tags": ["u-2 register"],
        "parameters": [
          {
            "name": "nickname",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$"
            },
            "description": "닉네임",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormIsDuplicatedNicknameRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-2-2 check duplicated nickname",
        "description": "u-2-2 check duplicated nickname.\n- RoleLevel: TEMPORARY_USER.\n- 닉네임이 중복되면 true, 중복되지 않으면 false를 반환.\n- 본인이 사용중인 닉네임이면 false를 반환.\n- 이미 사용중인 닉네임이면 true를 반환.",
        "x-nestia-namespace": "user.register.users.is-duplicated.isDuplicateNickname",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-2 register",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "nickname",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "닉네임",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/register/phone-number/auth-code": {
      "post": {
        "tags": ["u-2 register"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPhoneNumberAuthCodeReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "void",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormSendPhoneNumberAuthCodeRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-2-3 send auth code to phone number",
        "description": "u-2-3 send auth code to phone number.\n- RoleLevel: TEMPORARY_USER.\n- 전화번호로 인증코드를 전송한다.",
        "x-nestia-namespace": "user.register.phone-number.auth-code.sendPhoneNumberAuthCode",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-2 register",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "void",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/register/phone-number/auth-code/confirm": {
      "post": {
        "tags": ["u-2 register"],
        "parameters": [],
        "requestBody": {
          "description": "confirmAuthCodeReqDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmAuthCodeReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "true or false",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormConfirmAuthCodeRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          }
        },
        "summary": "u-2-4 confirm auth code",
        "description": "u-2-4 confirm auth code.\n- RoleLevel: TEMPORARY_USER.\n- 전화번호로 전송된 인증코드를 확인한다.\n- 인증성공시 User의 phoneNumber를 업데이트한다.\n- 인증성공시 true, 실패시 false를 반환한다.",
        "x-nestia-namespace": "user.register.phone-number.auth-code.confirm.confirmAuthCode",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-2 register",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "dto",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "confirmAuthCodeReqDto",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "true or false",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/register": {
      "patch": {
        "tags": ["u-2 register"],
        "parameters": [],
        "requestBody": {
          "description": "RegisterReqDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "accessToken & refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormRegisterUserRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          },
          "3000": {
            "description": "REGISTER_NICKNAME_DUPLICATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/REGISTER_NICKNAME_DUPLICATED"
                }
              }
            }
          },
          "3002": {
            "description": "REGISTER_POLICY_CONSENT_REQUIRED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/REGISTER_POLICY_CONSENT_REQUIRED"
                }
              }
            }
          },
          "3003": {
            "description": "REGISTER_PHONE_NUMBER_REQUIRED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/REGISTER_PHONE_NUMBER_REQUIRED"
                }
              }
            }
          }
        },
        "summary": "u-2-5 register user",
        "description": "u-2-5 register user.\n- RoleLevel: TEMPORARY_USER.\n- 유저 정보를 업데이트하고, USER 레벨로 업데이트한다.\n- USER 레벨로 업데이트된 accessToken, refreshToken을 반환한다.",
        "x-nestia-namespace": "user.register.registerUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-2 register",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "dto",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "RegisterReqDto",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "accessToken & refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/user/users": {
      "post": {
        "tags": ["u-3 users"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateUserRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-3-1 create user",
        "description": "u-3-1 create user. // todo: api 삭제 예정(유저 생성은 내부적으로만 사용)).\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.users.postUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-3 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created user info",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      },
      "patch": {
        "tags": ["u-3 users"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateUserRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          }
        },
        "summary": "u-3-2 update user",
        "description": "u-3-2 update user.\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.users.patchUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-3 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "dto",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "UpdateUserReqDto",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "updated user",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/user/users/me": {
      "get": {
        "tags": ["u-3 users"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetMeRes"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "404": {
            "description": "ENTITY_NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENTITY_NOT_FOUND"
                }
              }
            }
          }
        },
        "summary": "u-3-3 get me",
        "description": "u-3-3 get me.\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.users.me.getMe",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-3 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "user",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/policy/recent": {
      "get": {
        "tags": ["u-4 policy"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "recent policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormFindAllRecentPoliciesRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-4-1 find all types of recent policies",
        "description": "u-4-1 find all types of recent policies.\n- RoleLevel: TEMPORARY_USER.\n- 가장 최근에 등록된 모든 타입의 약관을 가져옵니다.",
        "x-nestia-namespace": "user.policy.recent.findAllRecentPolicies",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-4 policy",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "recent policies",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/policy/{policyId}": {
      "get": {
        "tags": ["u-4 policy"],
        "parameters": [
          {
            "name": "policyId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "policy id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "policy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormFindPolicyRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-4-2 find policy by id",
        "description": "u-4-2 find policy by id.\n- RoleLevel: TEMPORARY_USER.",
        "x-nestia-namespace": "user.policy.findPolicy",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-4 policy",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "id",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "policy id",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "policy",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/admin/policy": {
      "post": {
        "tags": ["a-4 policy"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePolicyReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created policy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreatePolicyRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-4-1 create policy",
        "description": "a-4-1 create policy.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.policy.postPolicy",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-4 policy",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created policy",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      },
      "get": {
        "tags": ["a-4 policy"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FindPoliciesReqQuery"
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormFindPoliciesRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-4-1 find policies",
        "description": "a-4-1 find policies.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.policy.findPolicies",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-4 policy",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "type",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "policy type",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "policies",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/competitions": {
      "get": {
        "tags": ["u-5 competitions"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FindCompetitionsReqQuery"
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "competitions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormFindCompetitionsRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-5-1 find competitions",
        "description": "u-5-1 find competitions.\n- RoleLevel: USER.\n- ACTIVE 상태인 competition 들을 조회합니다.\n\nQuery: FindCompetitionsReqQuery\n- page: 현제 페이지 번호입니다. 최초 요청 시에는 0을 사용합니다. (default: 0).\n- limit: 한페이지에 표시할 데이터 갯수. (default: 10).\n- dateFilter: 대회 날짜를 기준으로 필터링합니다. ex) '2023-04'. (default: Now).\n- locationFilter: 대회가 열리는 위치로 필터링합니다. ex) 서울, 부산, 인천, 대구, 대전, 광주, 울산, 세종, 경기, 충북, 충남, 전남, 경북, 경남, 강원, 전북, 제주.\n- selectFilter: 태그를 기준으로 필터링합니다. ex) ['간편결제', '얼리버드', '신청가능', '단독출전조정'].\n- sortOption: 대회를 정렬하는 옵션입니다. ex) '일자순', '조회순', '마감임박순'. (default: '일자순').",
        "x-nestia-namespace": "user.competitions.findCompetitions",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "competitions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/user/competitions/{competitionId}": {
      "get": {
        "tags": ["u-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "competition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetCompetitionRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-5-2 get competition",
        "description": "u-5-2 get competition.\n- RoleLevel: USER.\n- ACTIVE 상태인 competition 을 조회합니다.",
        "x-nestia-namespace": "user.competitions.getCompetition",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "competition",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/admin/competitions": {
      "post": {
        "tags": ["a-5 competitions"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetitionReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created competition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateCompetitionRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-1 create competition",
        "description": "a-5-1 create competition.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.createCompetition",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created competition",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      },
      "get": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FindCompetitionsReqQuery"
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "competitions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormFindCompetitionsRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-2 find competitions",
        "description": "a-5-2 find competitions.\n- RoleLevel: ADMIN.\n- ACTIVE, INACTIVE 상태인 competition 들을 조회합니다.\n\nQuery: FindCompetitionsReqQuery\n- page: 현제 페이지 번호입니다. 최초 요청 시에는 0을 사용합니다. (default: 0).\n- limit: 한페이지에 표시할 데이터 갯수. (default: 10).\n- dateFilter: 대회 날짜를 기준으로 필터링합니다. ex) '2023-04'. (default: Now).\n- locationFilter: 대회가 열리는 위치로 필터링합니다. ex) 서울, 부산, 인천, 대구, 대전, 광주, 울산, 세종, 경기, 충북, 충남, 전남, 경북, 경남, 강원, 전북, 제주.\n- selectFilter: 태그를 기준으로 필터링합니다. ex) ['간편결제', '얼리버드', '신청가능', '단독출전조정'].\n- sortOption: 대회를 정렬하는 옵션입니다. ex) '일자순', '조회순', '마감임박순'. (default: '일자순').",
        "x-nestia-namespace": "admin.competitions.findCompetitions",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "competitions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/admin/competitions/{competitionId}": {
      "get": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "competition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetCompetitionRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-3 get competition",
        "description": "a-5-3 get competition.\n- RoleLevel: ADMIN.\n- ACTIVE, INACTIVE 상태인 competition 을 조회합니다.",
        "x-nestia-namespace": "admin.competitions.findCompetition",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "competition",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "patch": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompetitionReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated competition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateCompetitionRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-4 update competition",
        "description": "a-5-4 update competition.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.updateCompetition",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "updated competition",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/admin/competitions/{competitionId}/status": {
      "patch": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompetitionStatusReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated competition",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateCompetitionRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-5 update competition status",
        "description": "a-5-5 update competition status.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.status.updateCompetitionStatus",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "updated competition",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/admin/competitions/{competitionId}/divisions": {
      "post": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDivisionsReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created divisions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateCompetitionDivisionsRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-6 create competition divisions",
        "description": "a-5-6 create competition divisions.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.divisions.createCompetitionDivisions",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created divisions",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/admin/competitions/{competitionId}/earlybird-discount-snapshots": {
      "post": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEarlybirdDiscountSnapshotReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created earlybird discount snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateEarlybirdDiscountSnapshotRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-7 create earlybird discount snapshot",
        "description": "a-5-7 create earlybird discount snapshot.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.earlybird-discount-snapshots.createCompetitionEarlybirdDiscountSnapshot",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created earlybird discount snapshot",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/admin/competitions/{competitionId}/combination-discount-snapshots": {
      "post": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCombinationDiscountSnapshotReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created combination discount snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateCombinationDiscountSnapshotRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-8 create combination discount snapshot",
        "description": "a-5-8 create combination discount snapshot.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.combination-discount-snapshots.createCombinationDiscountSnapshot",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created combination discount snapshot",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/admin/competitions/{competitionId}/required-additional-infos": {
      "post": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetitionRequiredAdditionalInfoReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created required addtional info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateCompetitionRequiredAdditionalInfoRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-9 create required addtional info",
        "description": "a-5-9 create required addtional info.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.required-additional-infos.createCompetitionRequiredAdditionalInfo",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created required addtional info",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/admin/competitions/{competitionId}/required-additional-infos/{requiredAdditionalInfoId}": {
      "patch": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          },
          {
            "name": "requiredAdditionalInfoId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequiredAdditionalInfoReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated required addtional info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateCompetitionRequiredAdditionalInfoRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-10 update required addtional info",
        "description": "a-5-10 update required addtional info.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.required-additional-infos.updateRequiredAdditionalInfo",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "updated required addtional info",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      },
      "delete": {
        "tags": ["a-5 competitions"],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          },
          {
            "name": "requiredAdditionalInfoId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "void",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormDeleteCompetitionRequiredAdditionalInfoRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "a-5-11 delete required addtional info",
        "description": "a-5-11 delete required addtional info.\n- RoleLevel: ADMIN.",
        "x-nestia-namespace": "admin.competitions.required-additional-infos.deleteRequiredAdditionalInfo",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "a-5 competitions",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "void",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/user/applications": {
      "post": {
        "tags": ["u-6 applications"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormCreateApplicationRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-1 create application",
        "description": "u-6-1 create application.\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.applications.createCompetitionApplication",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "application",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/user/applications/{applicationId}": {
      "get": {
        "tags": ["u-6 applications"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetApplicationRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-2 get application",
        "description": "u-6-2 get application.\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.applications.getCompetitionApplication",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "application",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      },
      "delete": {
        "tags": ["u-6 applications"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "void",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormvoid"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-5 delete application (아직구현 안됨)",
        "description": "u-6-5 delete application (아직구현 안됨).\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.applications.deleteCompetitionApplication",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "void",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "DELETE"
      }
    },
    "/user/applications/{applicationId}/ready": {
      "patch": {
        "tags": ["u-6 applications"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadyApplicationReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateReadyApplicationRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-3 update ready status application",
        "description": "u-6-3 update ready status application.\n- RoleLevel: USER.\n- READY(결제전) application 을 업데이트 합니다.\n- 기존 application을 DELETED 상태로 변경하고 새로운 application 을 생성합니다. (이유, 기존 applicaiton이 실제로는 결제 됐지만 서버 오류로 실패처리 된 경우, 기존 결제 정보가 남아있어야하기 때문).",
        "x-nestia-namespace": "user.applications.ready.updateCompetitionApplication",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "application",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/user/applications/{applicationId}/done": {
      "patch": {
        "tags": ["u-6 applications"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDoneApplicationReqBody"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUpdateDoneApplicationRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-4 update done status application",
        "description": "u-6-4 update done status application.\n- RoleLevel: USER.\n- DONE(결제완료) application 을 업데이트 합니다.\n- playerSnapshotUpdateDto, participationDivisionInfoUpdateDtos 중 하나는 필수로 전달해야 합니다.\n- playerSnapshotUpdateDto 를 전달하면 playerSnapshot을 새로 생성합니다.\n- participationDivisionInfoUpdateDtos 를 전달하면 participationDivisionInfoSnapshots을 새로 생성합니다.\n- playerSnapshotUpdateDto, participationDivisionInfoUpdateDtos 둘 다 전달하면 둘 다 새로 생성합니다.",
        "x-nestia-namespace": "user.applications.done.updateDoneCompetitionApplication",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "application",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/user/applications/{applicationId}/expected-payment": {
      "get": {
        "tags": ["u-6 applications"],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "description": "",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "expected payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormGetExpectedPaymentRes"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "u-6-6 get expected payment",
        "description": "u-6-6 get expected payment.\n- RoleLevel: USER.",
        "x-nestia-namespace": "user.applications.expected-payment.getExpectedPayment",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "u-6 applications",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "expected payment",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    }
  },
  "components": {
    "schemas": {
      "AUTH_ACCESS_TOKEN_MISSING": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [1000]
          },
          "type": {
            "type": "string",
            "enum": ["AUTH_ACCESS_TOKEN_MISSING"]
          },
          "result": {
            "type": "string",
            "enum": ["accssToken이 없습니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"],
        "description": "----------------------------------------------------------------------------\nAuth 1000 ~ 1999"
      },
      "AUTH_ACCESS_TOKEN_UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [401]
          },
          "code": {
            "type": "number",
            "enum": [1001]
          },
          "type": {
            "type": "string",
            "enum": ["AUTH_ACCESS_TOKEN_UNAUTHORIZED"]
          },
          "result": {
            "type": "string",
            "enum": ["유효하지 않은 accessToken 입니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "AUTH_LEVEL_FORBIDDEN": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [403]
          },
          "code": {
            "type": "number",
            "enum": [1003]
          },
          "type": {
            "type": "string",
            "enum": ["AUTH_LEVEL_FORBIDDEN"]
          },
          "result": {
            "type": "string",
            "enum": ["API 호출 권한이 없습니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "SnsLoginReqBody": {
        "type": "object",
        "properties": {
          "snsAuthProvider": {
            "type": "string",
            "enum": ["APPLE", "GOOGLE", "KAKAO", "NAVER"],
            "title": "- snsProvider",
            "description": "- snsProvider."
          },
          "snsAuthCode": {
            "type": "string",
            "title": "- authCode",
            "description": "- authCode."
          }
        },
        "nullable": false,
        "required": ["snsAuthProvider", "snsAuthCode"]
      },
      "SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [2000]
          },
          "type": {
            "type": "string",
            "enum": ["SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER"]
          },
          "result": {
            "type": "string",
            "enum": ["지원하지 않는 SNS AUTH PROVIDER 입니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"],
        "description": "----------------------------------------------------------------------------\nSnsAuth 2000 ~ 2999"
      },
      "SNS_AUTH_KAKAO_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [2001]
          },
          "type": {
            "type": "string",
            "enum": ["SNS_AUTH_KAKAO_LOGIN_FAIL"]
          },
          "result": {
            "type": "string",
            "enum": ["카카오 로그인에 실패했습니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "SNS_AUTH_NAVER_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [2002]
          },
          "type": {
            "type": "string",
            "enum": ["SNS_AUTH_NAVER_LOGIN_FAIL"]
          },
          "result": {
            "type": "string",
            "enum": ["네이버 로그인에 실패했습니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "SNS_AUTH_GOOGLE_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [2003]
          },
          "type": {
            "type": "string",
            "enum": ["SNS_AUTH_GOOGLE_LOGIN_FAIL"]
          },
          "result": {
            "type": "string",
            "enum": ["구글 로그인에 실패했습니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "ResponseFormSnsLoginRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/SnsLoginRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "SnsLoginRes": {
        "type": "object",
        "properties": {
          "authTokens": {
            "$ref": "#/components/schemas/IAuthTokens",
            "title": "- authTokens",
            "description": "- authTokens."
          }
        },
        "nullable": false,
        "required": ["authTokens"]
      },
      "IAuthTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "nullable": false,
        "required": ["accessToken", "refreshToken"]
      },
      "RefreshTokenReqBody": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "title": "- refreshToken",
            "description": "- refreshToken."
          }
        },
        "nullable": false,
        "required": ["refreshToken"]
      },
      "AUTH_REFRESH_TOKEN_UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [401]
          },
          "code": {
            "type": "number",
            "enum": [1002]
          },
          "type": {
            "type": "string",
            "enum": ["AUTH_REFRESH_TOKEN_UNAUTHORIZED"]
          },
          "result": {
            "type": "string",
            "enum": ["유효하지 않은 refreshToken 입니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "ResponseFormRefreshTokenRet": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/RefreshTokenRet"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "RefreshTokenRet": {
        "type": "object",
        "properties": {
          "authTokens": {
            "$ref": "#/components/schemas/IAuthTokens",
            "title": "- authTokens",
            "description": "- authTokens."
          }
        },
        "nullable": false,
        "required": ["authTokens"]
      },
      "ENTITY_NOT_FOUND": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [404]
          },
          "code": {
            "type": "number",
            "enum": [404]
          },
          "type": {
            "type": "string",
            "enum": ["ENTITY_NOT_FOUND"]
          },
          "result": {
            "type": "string",
            "enum": ["Entity Not Found"]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"],
        "description": "----------------------------------------------------------------------------\n- Entity Not Found Error 404"
      },
      "AUTH_UNREGISTERED_ADMIN_CREDENTIALS": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [403]
          },
          "code": {
            "type": "number",
            "enum": [1004]
          },
          "type": {
            "type": "string",
            "enum": ["AUTH_UNREGISTERED_ADMIN_CREDENTIALS"]
          },
          "result": {
            "type": "string",
            "enum": ["등록되지 않은 관리자 계정입니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "ResponseFormAcquireAdminRoleRet": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/AcquireAdminRoleRet"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "AcquireAdminRoleRet": {
        "type": "object",
        "properties": {
          "authTokens": {
            "$ref": "#/components/schemas/IAuthTokens",
            "title": "- authTokens",
            "description": "- authTokens."
          }
        },
        "nullable": false,
        "required": ["authTokens"]
      },
      "ResponseFormGetTemporaryUserRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/GetTemporaryUserRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "GetTemporaryUserRes": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ITemporaryUser"
          }
        },
        "nullable": false,
        "required": ["user"]
      },
      "ITemporaryUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "snsAuthProvider": {
            "type": "string",
            "enum": ["APPLE", "GOOGLE", "KAKAO", "NAVER"],
            "title": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다",
            "description": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "TEMPORARY_USER", "USER"],
            "title": "User 역할. User의 접근 권한을 나타냅니다",
            "description": "User 역할. User의 접근 권한을 나타냅니다.\n- ADMIN: 관리자 권한.\n- USER: 일반 User 권한.\n- TEMPORARY_USER: 회원가입을 완료하지 않은 User 권한."
          },
          "snsId": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다",
            "description": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "title": "User 이메일 주소",
            "description": "User 이메일 주소."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 이름",
            "description": "User 이름.\n- 컬럼길이는 256으로 설정하였으나, 입력값 유효성검사는 64자 이내로 설정하도록 합니다.\n- User 이름은 한글, 영문, 숫자만 입력 가능합니다."
          },
          "profileImageUrlKey": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "title": "User 프로필 이미지 키 (이미지 파일 이름)",
            "description": "User 프로필 이미지 키 (이미지 파일 이름).\n- 참고 s3 image key 최대길이 1024(https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html)."
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"],
            "title": "User 상태",
            "description": "User 상태.\n- ACTIVE: 활성.\n- INACTIVE: 비활성."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          },
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "nullable": true,
            "title": "User 별명",
            "description": "User 별명.\n- 영문, 한글, 숫자만 입력 가능합니다."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$",
            "nullable": true,
            "title": "User 전화번호",
            "description": "User 전화번호.\n- 전화번호가 저장되어 있으면 인증된 전화번호 입니다.\n- ex) 01012345678."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "nullable": true,
            "title": "User 성별",
            "description": "User 성별."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "nullable": true,
            "title": "User 생년월일 (BirtDate YYYYMMDD)",
            "description": "User 생년월일 (BirtDate YYYYMMDD)."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "선택없음", "퍼플", "화이트"],
            "nullable": true,
            "title": "User 주짓수 벨트",
            "description": "User 주짓수 벨트."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "snsAuthProvider",
          "role",
          "snsId",
          "email",
          "name",
          "profileImageUrlKey",
          "status",
          "createdAt",
          "updatedAt",
          "nickname",
          "phoneNumber",
          "gender",
          "birth",
          "belt"
        ]
      },
      "DateOrStringDate": {
        "oneOf": [
          {
            "type": "string",
            "format": "date-time"
          },
          {
            "type": "string",
            "format": "date-time"
          }
        ]
      },
      "ResponseFormIsDuplicatedNicknameRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/IsDuplicatedNicknameRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "IsDuplicatedNicknameRes": {
        "type": "object",
        "properties": {
          "isDuplicated": {
            "type": "boolean"
          }
        },
        "nullable": false,
        "required": ["isDuplicated"]
      },
      "SendPhoneNumberAuthCodeReqBody": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$"
          }
        },
        "nullable": false,
        "required": ["phoneNumber"]
      },
      "ResponseFormSendPhoneNumberAuthCodeRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/SendPhoneNumberAuthCodeRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "SendPhoneNumberAuthCodeRes": {
        "type": "object",
        "properties": {
          "phoneNumberAuthCode": {
            "$ref": "#/components/schemas/PhoneNumberAuthCode"
          }
        },
        "nullable": false,
        "required": ["phoneNumberAuthCode"]
      },
      "PhoneNumberAuthCode": {
        "type": "string",
        "pattern": "^[0-9]{6}$",
        "description": "휴대폰 인증 코드."
      },
      "ConfirmAuthCodeReqBody": {
        "type": "object",
        "properties": {
          "authCode": {
            "type": "string",
            "pattern": "^[0-9]{6}$"
          }
        },
        "nullable": false,
        "required": ["authCode"]
      },
      "ResponseFormConfirmAuthCodeRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/ConfirmAuthCodeRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "ConfirmAuthCodeRes": {
        "type": "object",
        "properties": {
          "isConfirmed": {
            "type": "boolean"
          }
        },
        "nullable": false,
        "required": ["isConfirmed"]
      },
      "RegisterUserReqBody": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/PickIUsernicknamegenderbirthbelt"
          },
          "consentPolicyTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"]
            }
          }
        },
        "nullable": false,
        "required": ["user", "consentPolicyTypes"]
      },
      "PickIUsernicknamegenderbirthbelt": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 별명",
            "description": "User 별명.\n- 영문, 한글, 숫자만 입력 가능합니다."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "User 성별",
            "description": "User 성별."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "User 생년월일 (BirtDate YYYYMMDD)",
            "description": "User 생년월일 (BirtDate YYYYMMDD)."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "선택없음", "퍼플", "화이트"],
            "title": "User 주짓수 벨트",
            "description": "User 주짓수 벨트."
          }
        },
        "nullable": false,
        "required": ["nickname", "gender", "birth", "belt"],
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "REGISTER_NICKNAME_DUPLICATED": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [409]
          },
          "code": {
            "type": "number",
            "enum": [3000]
          },
          "type": {
            "type": "string",
            "enum": ["REGISTER_NICKNAME_DUPLICATED"]
          },
          "result": {
            "type": "string",
            "enum": ["이미 사용중인 닉네임입니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"],
        "description": "----------------------------------------------------------------------------\nRegister 3000 ~ 3999"
      },
      "REGISTER_POLICY_CONSENT_REQUIRED": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [3002]
          },
          "type": {
            "type": "string",
            "enum": ["REGISTER_POLICY_CONSENT_REQUIRED"]
          },
          "result": {
            "type": "string",
            "enum": ["필수 동의 항목을 모두 동의해야 합니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "REGISTER_PHONE_NUMBER_REQUIRED": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [false]
          },
          "status": {
            "type": "number",
            "enum": [400]
          },
          "code": {
            "type": "number",
            "enum": [3003]
          },
          "type": {
            "type": "string",
            "enum": ["REGISTER_PHONE_NUMBER_REQUIRED"]
          },
          "result": {
            "type": "string",
            "enum": ["회원가입을 위해서는 휴대폰 번호인증이 필요합니다."]
          },
          "detail": {}
        },
        "nullable": false,
        "required": ["isSuccess", "status", "code", "type", "result"]
      },
      "ResponseFormRegisterUserRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/RegisterUserRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "RegisterUserRes": {
        "type": "object",
        "properties": {
          "authTokens": {
            "$ref": "#/components/schemas/IAuthTokens"
          }
        },
        "nullable": false,
        "required": ["authTokens"]
      },
      "CreateUserReqBody": {
        "type": "object",
        "properties": {
          "snsAuthProvider": {
            "type": "string",
            "enum": ["APPLE", "GOOGLE", "KAKAO", "NAVER"],
            "title": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다",
            "description": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "snsId": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다",
            "description": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "title": "User 이메일 주소",
            "description": "User 이메일 주소."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 이름",
            "description": "User 이름.\n- 컬럼길이는 256으로 설정하였으나, 입력값 유효성검사는 64자 이내로 설정하도록 합니다.\n- User 이름은 한글, 영문, 숫자만 입력 가능합니다."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$",
            "title": "User 전화번호",
            "description": "User 전화번호.\n- 전화번호가 저장되어 있으면 인증된 전화번호 입니다.\n- ex) 01012345678."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "User 성별",
            "description": "User 성별."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "User 생년월일 (BirtDate YYYYMMDD)",
            "description": "User 생년월일 (BirtDate YYYYMMDD)."
          }
        },
        "nullable": false,
        "required": ["snsAuthProvider", "snsId", "email", "name"]
      },
      "ResponseFormCreateUserRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateUserRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateUserRes": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ITemporaryUser"
          }
        },
        "nullable": false,
        "required": ["user"]
      },
      "UpdateUserReqBody": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 별명",
            "description": "User 별명.\n- 영문, 한글, 숫자만 입력 가능합니다."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 이름",
            "description": "User 이름.\n- 컬럼길이는 256으로 설정하였으나, 입력값 유효성검사는 64자 이내로 설정하도록 합니다.\n- User 이름은 한글, 영문, 숫자만 입력 가능합니다."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "User 성별",
            "description": "User 성별."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "User 생년월일 (BirtDate YYYYMMDD)",
            "description": "User 생년월일 (BirtDate YYYYMMDD)."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "선택없음", "퍼플", "화이트"],
            "title": "User 주짓수 벨트",
            "description": "User 주짓수 벨트."
          }
        },
        "nullable": false
      },
      "ResponseFormUpdateUserRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/UpdateUserRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "UpdateUserRes": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/IUser"
          }
        },
        "nullable": false,
        "required": ["user"]
      },
      "IUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "TEMPORARY_USER", "USER"],
            "title": "User 역할. User의 접근 권한을 나타냅니다",
            "description": "User 역할. User의 접근 권한을 나타냅니다.\n- ADMIN: 관리자 권한.\n- USER: 일반 User 권한.\n- TEMPORARY_USER: 회원가입을 완료하지 않은 User 권한."
          },
          "snsAuthProvider": {
            "type": "string",
            "enum": ["APPLE", "GOOGLE", "KAKAO", "NAVER"],
            "title": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다",
            "description": "SNS 공급자. User가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "snsId": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다",
            "description": "SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "title": "User 이메일 주소",
            "description": "User 이메일 주소."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 이름",
            "description": "User 이름.\n- 컬럼길이는 256으로 설정하였으나, 입력값 유효성검사는 64자 이내로 설정하도록 합니다.\n- User 이름은 한글, 영문, 숫자만 입력 가능합니다."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$",
            "title": "User 전화번호",
            "description": "User 전화번호.\n- 전화번호가 저장되어 있으면 인증된 전화번호 입니다.\n- ex) 01012345678."
          },
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣]{1,64}$",
            "title": "User 별명",
            "description": "User 별명.\n- 영문, 한글, 숫자만 입력 가능합니다."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "User 성별",
            "description": "User 성별."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "User 생년월일 (BirtDate YYYYMMDD)",
            "description": "User 생년월일 (BirtDate YYYYMMDD)."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "선택없음", "퍼플", "화이트"],
            "title": "User 주짓수 벨트",
            "description": "User 주짓수 벨트."
          },
          "profileImageUrlKey": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "title": "User 프로필 이미지 키 (이미지 파일 이름)",
            "description": "User 프로필 이미지 키 (이미지 파일 이름).\n- 참고 s3 image key 최대길이 1024(https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html)."
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"],
            "title": "User 상태",
            "description": "User 상태.\n- ACTIVE: 활성.\n- INACTIVE: 비활성."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "role",
          "snsAuthProvider",
          "snsId",
          "email",
          "name",
          "phoneNumber",
          "nickname",
          "gender",
          "birth",
          "belt",
          "profileImageUrlKey",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "description": "각 snsAuthProvider 마다 제공되는 정보.\n- kakao  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- naver  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- google : snsId, email, name.\n- apple  : snsId, email, name."
      },
      "ResponseFormGetMeRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/GetMeRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "GetMeRes": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/IUser"
          }
        },
        "nullable": false,
        "required": ["user"]
      },
      "ResponseFormFindAllRecentPoliciesRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/FindAllRecentPoliciesRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "FindAllRecentPoliciesRes": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPolicyFindMany"
            }
          }
        },
        "nullable": false,
        "required": ["policies"]
      },
      "IPolicyFindMany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "type": {
            "type": "string",
            "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"],
            "title": "약관의 종류",
            "description": "약관의 종류.\n- TERMS_OF_SERVICE: 서비스 이용 약관.\n- PRIVACY: 개인정보 처리 방침.\n- REFUND: 환불 정책.\n- ADVERTISEMENT: 광고정책."
          },
          "version": {
            "type": "integer",
            "minimum": 0,
            "title": "약관의 버전",
            "description": "약관의 버전."
          },
          "isMandatory": {
            "type": "boolean",
            "title": "약관동의 필수여수",
            "description": "약관동의 필수여수.\n- true: 필수.\n- false: 선택."
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "약관의 제목",
            "description": "약관의 제목.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          }
        },
        "nullable": false,
        "required": ["id", "createdAt", "type", "version", "isMandatory", "title"]
      },
      "ResponseFormFindPolicyRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/FindPolicyRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "FindPolicyRes": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/IPolicy.Nullable"
          }
        },
        "nullable": false,
        "required": ["policy"]
      },
      "IPolicy.Nullable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "version": {
            "type": "integer",
            "minimum": 0,
            "title": "약관의 버전",
            "description": "약관의 버전."
          },
          "type": {
            "type": "string",
            "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"],
            "title": "약관의 종류",
            "description": "약관의 종류.\n- TERMS_OF_SERVICE: 서비스 이용 약관.\n- PRIVACY: 개인정보 처리 방침.\n- REFUND: 환불 정책.\n- ADVERTISEMENT: 광고정책."
          },
          "isMandatory": {
            "type": "boolean",
            "title": "약관동의 필수여수",
            "description": "약관동의 필수여수.\n- true: 필수.\n- false: 선택."
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "약관의 제목",
            "description": "약관의 제목.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "약관의 내용",
            "description": "약관의 내용.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          }
        },
        "nullable": true,
        "required": ["id", "version", "type", "isMandatory", "title", "content", "createdAt"],
        "description": "약관.\n- 같은 타입의 약관수정이 필요할때는 업데이트가 아닌 새로운 약관을 생성합니다.\n- 새로운 약관이 생성될 때마다 버전을 올립니다."
      },
      "CreatePolicyReqBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"],
            "title": "약관의 종류",
            "description": "약관의 종류.\n- TERMS_OF_SERVICE: 서비스 이용 약관.\n- PRIVACY: 개인정보 처리 방침.\n- REFUND: 환불 정책.\n- ADVERTISEMENT: 광고정책."
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "약관의 내용",
            "description": "약관의 내용.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          },
          "isMandatory": {
            "type": "boolean",
            "title": "약관동의 필수여수",
            "description": "약관동의 필수여수.\n- true: 필수.\n- false: 선택."
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "약관의 제목",
            "description": "약관의 제목.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          }
        },
        "nullable": false,
        "required": ["type", "content", "isMandatory", "title"]
      },
      "ResponseFormCreatePolicyRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreatePolicyRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreatePolicyRes": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/IPolicy"
          }
        },
        "nullable": false,
        "required": ["policy"]
      },
      "IPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "version": {
            "type": "integer",
            "minimum": 0,
            "title": "약관의 버전",
            "description": "약관의 버전."
          },
          "type": {
            "type": "string",
            "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"],
            "title": "약관의 종류",
            "description": "약관의 종류.\n- TERMS_OF_SERVICE: 서비스 이용 약관.\n- PRIVACY: 개인정보 처리 방침.\n- REFUND: 환불 정책.\n- ADVERTISEMENT: 광고정책."
          },
          "isMandatory": {
            "type": "boolean",
            "title": "약관동의 필수여수",
            "description": "약관동의 필수여수.\n- true: 필수.\n- false: 선택."
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "약관의 제목",
            "description": "약관의 제목.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "title": "약관의 내용",
            "description": "약관의 내용.\n- ex) 서비스 이용 약관, 개인정보 처리 방침, 환불 정책."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          }
        },
        "nullable": false,
        "required": ["id", "version", "type", "isMandatory", "title", "content", "createdAt"],
        "description": "약관.\n- 같은 타입의 약관수정이 필요할때는 업데이트가 아닌 새로운 약관을 생성합니다.\n- 새로운 약관이 생성될 때마다 버전을 올립니다."
      },
      "FindPoliciesReqQuery": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ADVERTISEMENT", "PRIVACY", "REFUND", "TERMS_OF_SERVICE"]
          }
        },
        "nullable": false
      },
      "ResponseFormFindPoliciesRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/FindPoliciesRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "FindPoliciesRes": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPolicyFindMany"
            }
          }
        },
        "nullable": false,
        "required": ["policies"]
      },
      "FindCompetitionsReqQuery": {
        "type": "object",
        "properties": {
          "dateFilter": {
            "type": "string",
            "pattern": "^[0-9]{4}-[0-9]{2}$",
            "title": "- 날짜 필터. YYYY-MM 형식입니다",
            "description": "- 날짜 필터. YYYY-MM 형식입니다."
          },
          "page": {
            "type": "number",
            "description": "현제 페이지 번호입니다. default: 0"
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "description": "한 페이지에 보여줄 아이템의 수입니다. default: 10, max: 100"
          },
          "sortOption": {
            "type": "string",
            "enum": ["마감임박순", "일자순", "조회순"],
            "description": "대회를 정렬하는 옵션입니다. default: '일자순'\n- 일자순: 대회 날짜 순으로 정렬\n- 조회순: 조회수 순으로 정렬\n- 마감임박순: 참가 신청 마감일이 가까운 순으로 정렬"
          },
          "locationFilter": {
            "type": "string",
            "enum": [
              "강원",
              "경기",
              "경남",
              "경북",
              "광주",
              "대구",
              "대전",
              "부산",
              "서울",
              "세종",
              "울산",
              "인천",
              "전남",
              "전북",
              "제주",
              "충남",
              "충북"
            ],
            "title": "- 대회가 열리는 위치로 필터링합니다",
            "description": "- 대회가 열리는 위치로 필터링합니다."
          },
          "selectFilter": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["간편결제", "단독출전조정", "신청가능", "얼리버드"]
            },
            "description": "태그를 기준으로 필터링합니다. 중복 선택 가능합니다\n- 간편결제: 간편결제 가능한 대회 (협약 대회)\n- 얼리버드: 얼리버드 할인 기간 중인 대회\n- 신청가능: 참가 신청 가능한 대회\n- 단독출전조정: 단독 참가자의 부문 조정 기간 중인 대회"
          }
        },
        "nullable": false
      },
      "ResponseFormFindCompetitionsRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/FindCompetitionsRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "FindCompetitionsRes": {
        "type": "object",
        "properties": {
          "competitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICompetitionForFind"
            }
          },
          "nextPage": {
            "type": "number"
          }
        },
        "nullable": false,
        "required": ["competitions"]
      },
      "ICompetitionForFind": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "status": {
            "$ref": "#/components/schemas/CompetitionStatus",
            "title": "대회의 상태",
            "description": "대회의 상태.\n- ACTIVE: 활성화된 대회 유저에게 노출, 참가 신청 가능.\n- INACTIVE: 비활성화된 대회 유저에게 노출되지 않음, 참가 신청 불가능."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          },
          "title": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회명",
            "description": "대회명."
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회가 열리는 위치 (도로명 주소)",
            "description": "대회가 열리는 위치 (도로명 주소)."
          },
          "competitionDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대회 날짜",
            "description": "대회 날짜."
          },
          "registrationStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 시작일",
            "description": "참가 신청 시작일."
          },
          "registrationEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 마감일",
            "description": "참가 신청 마감일."
          },
          "refundDeadlineDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "환불 가능 기간 마감일",
            "description": "환불 가능 기간 마감일."
          },
          "soloRegistrationAdjustmentStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 시작일",
            "description": "단독 참가자의 부문 조정 시작일.\n- 부문에 참가자가 한 명만 있는 경우, 해당 참가자를 다른 체급이나 부문으로 조정할 수 있는 기간의 시작을 나타냅니다."
          },
          "soloRegistrationAdjustmentEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 마감일",
            "description": "단독 참가자의 부문 조정 마감일."
          },
          "registrationListOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가자 명단 공개일",
            "description": "참가자 명단 공개일."
          },
          "bracketOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대진표 공개일",
            "description": "대진표 공개일."
          },
          "description": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 1,
            "title": "대회 상세 정보",
            "description": "대회 상세 정보."
          },
          "isPartnership": {
            "type": "boolean",
            "title": "협약 대회 여부",
            "description": "협약 대회 여부."
          },
          "viewCount": {
            "type": "integer",
            "title": "조회수",
            "description": "조회수."
          },
          "posterImgUrlKey": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "title": "대회 포스터 이미지 URL Key",
            "description": "대회 포스터 이미지 URL Key."
          },
          "earlybirdDiscountSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEarlybirdDiscountSnapshot"
            },
            "title": "얼리버드 할인 정보",
            "description": "얼리버드 할인 정보.\n- 배열의 길이가 0이면 얼리버드 할인이 없는 대회입니다.\n- 배열의 마지막 요소가 현재 적용중인 얼리버드 할인 정보입니다."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "status",
          "createdAt",
          "updatedAt",
          "title",
          "address",
          "competitionDate",
          "registrationStartDate",
          "registrationEndDate",
          "refundDeadlineDate",
          "soloRegistrationAdjustmentStartDate",
          "soloRegistrationAdjustmentEndDate",
          "registrationListOpenDate",
          "bracketOpenDate",
          "description",
          "isPartnership",
          "viewCount",
          "posterImgUrlKey",
          "earlybirdDiscountSnapshots"
        ]
      },
      "CompetitionStatus": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE"]
      },
      "IEarlybirdDiscountSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "earlybirdStartDate": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "얼리버드 할인 시작일",
            "description": "얼리버드 할인 시작일."
          },
          "earlybirdEndDate": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "얼리버드 할인 마감일",
            "description": "얼리버드 할인 마감일."
          },
          "discountAmount": {
            "type": "integer",
            "minimum": 0,
            "title": "얼리버드 할인 가격",
            "description": "얼리버드 할인 가격.\n- ex) 10000.\n- 단위 : 원.\n- 음수 값은 허용하지 않습니다."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Competition id",
            "description": "Competition id."
          }
        },
        "nullable": false,
        "required": ["id", "earlybirdStartDate", "earlybirdEndDate", "discountAmount", "createdAt", "competitionId"]
      },
      "ResponseFormGetCompetitionRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/GetCompetitionRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "GetCompetitionRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "ICompetition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "title": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회명",
            "description": "대회명."
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회가 열리는 위치 (도로명 주소)",
            "description": "대회가 열리는 위치 (도로명 주소)."
          },
          "competitionDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대회 날짜",
            "description": "대회 날짜."
          },
          "registrationStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 시작일",
            "description": "참가 신청 시작일."
          },
          "registrationEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 마감일",
            "description": "참가 신청 마감일."
          },
          "refundDeadlineDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "환불 가능 기간 마감일",
            "description": "환불 가능 기간 마감일."
          },
          "soloRegistrationAdjustmentStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 시작일",
            "description": "단독 참가자의 부문 조정 시작일.\n- 부문에 참가자가 한 명만 있는 경우, 해당 참가자를 다른 체급이나 부문으로 조정할 수 있는 기간의 시작을 나타냅니다."
          },
          "soloRegistrationAdjustmentEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 마감일",
            "description": "단독 참가자의 부문 조정 마감일."
          },
          "registrationListOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가자 명단 공개일",
            "description": "참가자 명단 공개일."
          },
          "bracketOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대진표 공개일",
            "description": "대진표 공개일."
          },
          "description": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 1,
            "title": "대회 상세 정보",
            "description": "대회 상세 정보."
          },
          "isPartnership": {
            "type": "boolean",
            "title": "협약 대회 여부",
            "description": "협약 대회 여부."
          },
          "viewCount": {
            "type": "integer",
            "title": "조회수",
            "description": "조회수."
          },
          "posterImgUrlKey": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "title": "대회 포스터 이미지 URL Key",
            "description": "대회 포스터 이미지 URL Key."
          },
          "status": {
            "$ref": "#/components/schemas/CompetitionStatus",
            "title": "대회의 상태",
            "description": "대회의 상태.\n- ACTIVE: 활성화된 대회 유저에게 노출, 참가 신청 가능.\n- INACTIVE: 비활성화된 대회 유저에게 노출되지 않음, 참가 신청 불가능."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          },
          "divisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDivision"
            },
            "title": "대회 부문 정보",
            "description": "대회 부문 정보."
          },
          "earlybirdDiscountSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEarlybirdDiscountSnapshot"
            },
            "title": "얼리버드 할인 정보",
            "description": "얼리버드 할인 정보.\n- 배열의 길이가 0이면 얼리버드 할인이 없는 대회입니다.\n- 배열의 마지막 요소가 현재 적용중인 얼리버드 할인 정보입니다."
          },
          "combinationDiscountSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICombinationDiscountSnapshot"
            },
            "title": "조합 할인 정보",
            "description": "조합 할인 정보.\n- 배열의 길이가 0이면 조합 할인이 없는 대회입니다.\n- 배열의 마지막 요소가 현재 적용중인 조합 할인 정보입니다."
          },
          "requiredAdditionalInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IRequiredAdditionalInfo"
            },
            "title": "대회 신청시 추가저으로 필요로하는 정보를 정의합니다",
            "description": "대회 신청시 추가저으로 필요로하는 정보를 정의합니다.\n- ex) 주민번호, 주소"
          }
        },
        "nullable": false,
        "required": [
          "id",
          "title",
          "address",
          "competitionDate",
          "registrationStartDate",
          "registrationEndDate",
          "refundDeadlineDate",
          "soloRegistrationAdjustmentStartDate",
          "soloRegistrationAdjustmentEndDate",
          "registrationListOpenDate",
          "bracketOpenDate",
          "description",
          "isPartnership",
          "viewCount",
          "posterImgUrlKey",
          "status",
          "createdAt",
          "updatedAt",
          "divisions",
          "earlybirdDiscountSnapshots",
          "combinationDiscountSnapshots",
          "requiredAdditionalInfos"
        ]
      },
      "IDivision": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "category": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "부문 카테고리",
            "description": "부문 카테고리.\n- ex) '초등부', '중등부', '어덜트'."
          },
          "uniform": {
            "type": "string",
            "enum": ["GI", "NOGI"],
            "title": "유니폼",
            "description": "유니폼."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE", "MIXED"],
            "title": "부문 성별",
            "description": "부문 성별."
          },
          "belt": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "주짓수벨트",
            "description": "주짓수벨트.\n- ex) '화이트', '블루', '퍼플', '브라운', '블랙'."
          },
          "weight": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WeightType"
              },
              {
                "$ref": "#/components/schemas/AbsoluteType"
              }
            ],
            "title": "체급",
            "description": "체급.\n- weight type: '-45', '+45', '-60.5', '+60.5'\n- absolute type: '-45_ABSOLUTE', '+45_ABSOLUTE', '-60.5_ABSOLUTE', '+60.5_ABSOLUTE', 'ABSOLUTE'"
          },
          "birthYearRangeStart": {
            "type": "string",
            "minLength": 4,
            "pattern": "^[0-9]{4}$",
            "title": "출생년도 범위 시작. YYYY",
            "description": "출생년도 범위 시작. YYYY."
          },
          "birthYearRangeEnd": {
            "type": "string",
            "minLength": 4,
            "pattern": "^[0-9]{4}$",
            "title": "출생년도 범위 끝. YYYY",
            "description": "출생년도 범위 끝. YYYY."
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"],
            "title": "활성 상태",
            "description": "활성 상태.\n- ACTIVE: 해당 부문에 신청 가능. (USER 에게 노출됨.)\n- INACTIVE: 해당 부문에 신청 불가능. (USER 에게 노출되지 않음.)"
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "CompetitionId",
            "description": "CompetitionId."
          },
          "priceSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPriceSnapshot"
            },
            "minItems": 1,
            "title": "가격 스냅샷",
            "description": "가격 스냅샷."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "category",
          "uniform",
          "gender",
          "belt",
          "weight",
          "birthYearRangeStart",
          "birthYearRangeEnd",
          "status",
          "createdAt",
          "updatedAt",
          "competitionId",
          "priceSnapshots"
        ]
      },
      "WeightType": {
        "type": "string",
        "maxLength": 64,
        "minLength": 1,
        "pattern": "^[-+]\\d+(\\.\\d+)?$",
        "description": "일반 체급 타입.\n- ex) '-45', '+45', '-60.5', '+60.5'"
      },
      "AbsoluteType": {
        "type": "string",
        "maxLength": 64,
        "minLength": 1,
        "pattern": "^[-+]\\d+(\\.\\d+)?_ABSOLUTE$|ABSOLUTE$",
        "description": "앱솔루트 체급 타입.\n- ex) '-45_ABSOLUTE', '+45_ABSOLUTE', '-60.5_ABSOLUTE', '+60.5_ABSOLUTE', 'ABSOLUTE'"
      },
      "IPriceSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "price": {
            "type": "integer",
            "minimum": 0,
            "title": "price, (원)",
            "description": "price, (원)."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "divisionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Division id",
            "description": "Division id."
          }
        },
        "nullable": false,
        "required": ["id", "price", "createdAt", "divisionId"]
      },
      "ICombinationDiscountSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "combinationDiscountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICombinationDiscountRule"
            },
            "minItems": 1,
            "title": "조합 할인 규칙",
            "description": "조합 할인 규칙."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Competition id",
            "description": "Competition id."
          }
        },
        "nullable": false,
        "required": ["id", "combinationDiscountRules", "createdAt", "competitionId"]
      },
      "ICombinationDiscountRule": {
        "type": "object",
        "properties": {
          "combination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICombinationUnit"
            },
            "title": "할인 조합",
            "description": "할인 조합.\n- ICombinationUnit들의 조합을 만족하는경우 할인금액을 적용한다."
          },
          "discountAmount": {
            "type": "number",
            "title": "할인금액",
            "description": "할인금액."
          }
        },
        "nullable": false,
        "required": ["combination", "discountAmount"]
      },
      "ICombinationUnit": {
        "type": "object",
        "properties": {
          "uniformType": {
            "type": "string",
            "enum": ["GI", "NOGI"],
            "title": "Uniform Type (Gi or NOGI)",
            "description": "Uniform Type (Gi or NOGI)."
          },
          "weightType": {
            "type": "string",
            "enum": ["ABSOLUTE", "WEIGHT"],
            "title": "Weight Type (WEIGHT or ABSOLUTE)",
            "description": "Weight Type (WEIGHT or ABSOLUTE)."
          }
        },
        "nullable": false,
        "required": ["uniformType", "weightType"]
      },
      "IRequiredAdditionalInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "type": {
            "type": "string",
            "enum": ["ADDRESS", "SOCIAL_SECURITY_NUMBER"],
            "description": "Type"
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "title": "Description",
            "description": "Description."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "description": "DeletedAT"
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "description": "Competition Id"
          }
        },
        "nullable": false,
        "required": ["id", "type", "description", "createdAt", "deletedAt", "competitionId"]
      },
      "CreateCompetitionReqBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회명",
            "description": "대회명."
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회가 열리는 위치 (도로명 주소)",
            "description": "대회가 열리는 위치 (도로명 주소)."
          },
          "competitionDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대회 날짜",
            "description": "대회 날짜."
          },
          "registrationStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 시작일",
            "description": "참가 신청 시작일."
          },
          "registrationEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 마감일",
            "description": "참가 신청 마감일."
          },
          "refundDeadlineDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "환불 가능 기간 마감일",
            "description": "환불 가능 기간 마감일."
          },
          "soloRegistrationAdjustmentStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 시작일",
            "description": "단독 참가자의 부문 조정 시작일.\n- 부문에 참가자가 한 명만 있는 경우, 해당 참가자를 다른 체급이나 부문으로 조정할 수 있는 기간의 시작을 나타냅니다."
          },
          "soloRegistrationAdjustmentEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 마감일",
            "description": "단독 참가자의 부문 조정 마감일."
          },
          "registrationListOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가자 명단 공개일",
            "description": "참가자 명단 공개일."
          },
          "bracketOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대진표 공개일",
            "description": "대진표 공개일."
          },
          "description": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 1,
            "title": "대회 상세 정보",
            "description": "대회 상세 정보."
          },
          "isPartnership": {
            "type": "boolean",
            "title": "협약 대회 여부",
            "description": "협약 대회 여부."
          }
        },
        "nullable": false
      },
      "ResponseFormCreateCompetitionRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateCompetitionRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateCompetitionRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetitionWithoutRelations"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "ICompetitionWithoutRelations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "status": {
            "$ref": "#/components/schemas/CompetitionStatus",
            "title": "대회의 상태",
            "description": "대회의 상태.\n- ACTIVE: 활성화된 대회 유저에게 노출, 참가 신청 가능.\n- INACTIVE: 비활성화된 대회 유저에게 노출되지 않음, 참가 신청 불가능."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "UpdatedAt",
            "description": "UpdatedAt."
          },
          "title": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회명",
            "description": "대회명."
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회가 열리는 위치 (도로명 주소)",
            "description": "대회가 열리는 위치 (도로명 주소)."
          },
          "competitionDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대회 날짜",
            "description": "대회 날짜."
          },
          "registrationStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 시작일",
            "description": "참가 신청 시작일."
          },
          "registrationEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 마감일",
            "description": "참가 신청 마감일."
          },
          "refundDeadlineDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "환불 가능 기간 마감일",
            "description": "환불 가능 기간 마감일."
          },
          "soloRegistrationAdjustmentStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 시작일",
            "description": "단독 참가자의 부문 조정 시작일.\n- 부문에 참가자가 한 명만 있는 경우, 해당 참가자를 다른 체급이나 부문으로 조정할 수 있는 기간의 시작을 나타냅니다."
          },
          "soloRegistrationAdjustmentEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 마감일",
            "description": "단독 참가자의 부문 조정 마감일."
          },
          "registrationListOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가자 명단 공개일",
            "description": "참가자 명단 공개일."
          },
          "bracketOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대진표 공개일",
            "description": "대진표 공개일."
          },
          "description": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 1,
            "title": "대회 상세 정보",
            "description": "대회 상세 정보."
          },
          "isPartnership": {
            "type": "boolean",
            "title": "협약 대회 여부",
            "description": "협약 대회 여부."
          },
          "viewCount": {
            "type": "integer",
            "title": "조회수",
            "description": "조회수."
          },
          "posterImgUrlKey": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "nullable": true,
            "title": "대회 포스터 이미지 URL Key",
            "description": "대회 포스터 이미지 URL Key."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "status",
          "createdAt",
          "updatedAt",
          "title",
          "address",
          "competitionDate",
          "registrationStartDate",
          "registrationEndDate",
          "refundDeadlineDate",
          "soloRegistrationAdjustmentStartDate",
          "soloRegistrationAdjustmentEndDate",
          "registrationListOpenDate",
          "bracketOpenDate",
          "description",
          "isPartnership",
          "viewCount",
          "posterImgUrlKey"
        ]
      },
      "UpdateCompetitionReqBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회명",
            "description": "대회명."
          },
          "address": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "대회가 열리는 위치 (도로명 주소)",
            "description": "대회가 열리는 위치 (도로명 주소)."
          },
          "competitionDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대회 날짜",
            "description": "대회 날짜."
          },
          "registrationStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 시작일",
            "description": "참가 신청 시작일."
          },
          "registrationEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가 신청 마감일",
            "description": "참가 신청 마감일."
          },
          "refundDeadlineDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "환불 가능 기간 마감일",
            "description": "환불 가능 기간 마감일."
          },
          "soloRegistrationAdjustmentStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 시작일",
            "description": "단독 참가자의 부문 조정 시작일.\n- 부문에 참가자가 한 명만 있는 경우, 해당 참가자를 다른 체급이나 부문으로 조정할 수 있는 기간의 시작을 나타냅니다."
          },
          "soloRegistrationAdjustmentEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "단독 참가자의 부문 조정 마감일",
            "description": "단독 참가자의 부문 조정 마감일."
          },
          "registrationListOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "참가자 명단 공개일",
            "description": "참가자 명단 공개일."
          },
          "bracketOpenDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "대진표 공개일",
            "description": "대진표 공개일."
          },
          "description": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 1,
            "title": "대회 상세 정보",
            "description": "대회 상세 정보."
          },
          "isPartnership": {
            "type": "boolean",
            "title": "협약 대회 여부",
            "description": "협약 대회 여부."
          }
        },
        "nullable": false
      },
      "ResponseFormUpdateCompetitionRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/UpdateCompetitionRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "UpdateCompetitionRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "UpdateCompetitionStatusReqBody": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"],
            "title": "대회의 상태",
            "description": "대회의 상태.\n- ACTIVE: 활성화된 대회 유저에게 노출, 참가 신청 가능.\n- INACTIVE: 비활성화된 대회 유저에게 노출되지 않음, 참가 신청 불가능."
          }
        },
        "nullable": false,
        "required": ["status"]
      },
      "CreateDivisionsReqBody": {
        "type": "object",
        "properties": {
          "divisionPacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDivisionPack"
            },
            "minItems": 1,
            "title": "- Division packs",
            "description": "- Division packs."
          }
        },
        "nullable": false,
        "required": ["divisionPacks"]
      },
      "IDivisionPack": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1
            },
            "minItems": 1,
            "title": "생성하고자 하는 카테고리 이름",
            "description": "생성하고자 하는 카테고리 이름.\n- ex) '초등부', '중등부', '고등부', '어덜트', '마스터'."
          },
          "uniforms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["GI", "NOGI"]
            },
            "minItems": 1,
            "title": "생성하고자 하는 유니폼 종류",
            "description": "생성하고자 하는 유니폼 종류.\n- ex) 'GI', 'NOGI'."
          },
          "genders": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["FEMALE", "MALE", "MIXED"]
            },
            "minItems": 1,
            "title": "생성하고자 하는 성별",
            "description": "생성하고자 하는 성별.\n- ex) 'MALE', 'FEMALE', 'MIXED'."
          },
          "belts": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1
            },
            "minItems": 1,
            "title": "생성하고자 하는 주짓수 벨트",
            "description": "생성하고자 하는 주짓수 벨트.\n- ex) '화이트', '블루', '퍼플', '브라운', '블랙'."
          },
          "weights": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[-+]\\d+(\\.\\d+)?$"
                },
                {
                  "type": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^[-+]\\d+(\\.\\d+)?_ABSOLUTE$|ABSOLUTE$"
                }
              ]
            },
            "minItems": 1,
            "title": "생성하고자 하는 체급",
            "description": "생성하고자 하는 체급.\n- ex) '-40', '-45', '-50', '+50', 'ABSOLUTE'."
          },
          "birthYearRangeStart": {
            "type": "string",
            "minLength": 4,
            "pattern": "^[0-9]{4}$",
            "title": "생성하고자 하는 출생년도 범위 시작",
            "description": "생성하고자 하는 출생년도 범위 시작."
          },
          "birthYearRangeEnd": {
            "type": "string",
            "minLength": 4,
            "pattern": "^[0-9]{4}$",
            "title": "생성하고자 하는 출생년도 범위 끝",
            "description": "생성하고자 하는 출생년도 범위 끝."
          },
          "price": {
            "type": "integer",
            "minimum": 0,
            "title": "생성하고자 하는 가격",
            "description": "생성하고자 하는 가격."
          }
        },
        "nullable": false,
        "required": [
          "categories",
          "uniforms",
          "genders",
          "belts",
          "weights",
          "birthYearRangeStart",
          "birthYearRangeEnd",
          "price"
        ]
      },
      "ResponseFormCreateCompetitionDivisionsRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateCompetitionDivisionsRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateCompetitionDivisionsRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "CreateEarlybirdDiscountSnapshotReqBody": {
        "type": "object",
        "properties": {
          "earlybirdStartDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "얼리버드 할인 시작일",
            "description": "얼리버드 할인 시작일."
          },
          "earlybirdEndDate": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "얼리버드 할인 마감일",
            "description": "얼리버드 할인 마감일."
          },
          "discountAmount": {
            "type": "integer",
            "minimum": 0,
            "title": "얼리버드 할인 가격",
            "description": "얼리버드 할인 가격.\n- ex) 10000.\n- 단위 : 원.\n- 음수 값은 허용하지 않습니다."
          }
        },
        "nullable": false,
        "required": ["earlybirdStartDate", "earlybirdEndDate", "discountAmount"]
      },
      "ResponseFormCreateEarlybirdDiscountSnapshotRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateEarlybirdDiscountSnapshotRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateEarlybirdDiscountSnapshotRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "CreateCombinationDiscountSnapshotReqBody": {
        "type": "object",
        "properties": {
          "combinationDiscountRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICombinationDiscountRule"
            },
            "minItems": 1,
            "title": "조합 할인 규칙",
            "description": "조합 할인 규칙."
          }
        },
        "nullable": false,
        "required": ["combinationDiscountRules"]
      },
      "ResponseFormCreateCombinationDiscountSnapshotRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateCombinationDiscountSnapshotRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateCombinationDiscountSnapshotRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "CreateCompetitionRequiredAdditionalInfoReqBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ADDRESS", "SOCIAL_SECURITY_NUMBER"],
            "description": "Type"
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "title": "Description",
            "description": "Description."
          }
        },
        "nullable": false,
        "required": ["type", "description"]
      },
      "ResponseFormCreateCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateCompetitionRequiredAdditionalInfoRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "UpdateRequiredAdditionalInfoReqBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "title": "Description",
            "description": "Description."
          }
        },
        "nullable": false,
        "required": ["description"]
      },
      "ResponseFormUpdateCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/UpdateCompetitionRequiredAdditionalInfoRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "UpdateCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "ResponseFormDeleteCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/DeleteCompetitionRequiredAdditionalInfoRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "DeleteCompetitionRequiredAdditionalInfoRes": {
        "type": "object",
        "properties": {
          "competition": {
            "$ref": "#/components/schemas/ICompetition"
          }
        },
        "nullable": false,
        "required": ["competition"]
      },
      "CreateApplicationReqBody": {
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string",
            "enum": ["PROXY", "SELF"]
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26
          },
          "participationDivisionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "minItems": 1,
            "title": "- Division IDs to participate",
            "description": "- Division IDs to participate."
          },
          "playerSnapshotCreateDto": {
            "$ref": "#/components/schemas/IPlayerSnapshotCreateDto"
          },
          "additionalInfoCreateDtos": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SocialScurityNumberInfo"
                },
                {
                  "$ref": "#/components/schemas/AddressInfo"
                }
              ]
            }
          }
        },
        "nullable": false,
        "required": ["applicationType", "competitionId", "participationDivisionIds", "playerSnapshotCreateDto"]
      },
      "IPlayerSnapshotCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "Player name. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "Player name. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$",
            "title": "Player phoneNumber. ex) 01012345678",
            "description": "Player phoneNumber. ex) 01012345678."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "Player gender",
            "description": "Player gender."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "Player birth (BirtDate YYYYMMDD)",
            "description": "Player birth (BirtDate YYYYMMDD)."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "퍼플", "화이트"],
            "title": "Player belt",
            "description": "Player belt."
          },
          "network": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "주짓수 네트워크. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "주짓수 네트워크. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "team": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "소속 팀. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "소속 팀. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "masterName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "관장님 성함",
            "description": "관장님 성함."
          }
        },
        "nullable": false,
        "required": ["name", "phoneNumber", "gender", "birth", "belt", "network", "team", "masterName"]
      },
      "SocialScurityNumberInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["SOCIAL_SECURITY_NUMBER"]
          },
          "value": {
            "type": "string",
            "pattern": "^[0-9]{6}-[0-9]{7}$"
          }
        },
        "nullable": false,
        "required": ["type", "value"]
      },
      "AddressInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ADDRESS"]
          },
          "value": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1
          }
        },
        "nullable": false,
        "required": ["type", "value"]
      },
      "ResponseFormCreateApplicationRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/CreateApplicationRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "CreateApplicationRes": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/IApplication"
          }
        },
        "nullable": false,
        "required": ["application"]
      },
      "IApplication": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "Created at",
            "description": "Created at."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "Updated at",
            "description": "Updated at."
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            ],
            "title": "Deleted at",
            "description": "Deleted at."
          },
          "type": {
            "type": "string",
            "enum": ["PROXY", "SELF"],
            "title": "본인신청과 대리신청을 구별하는 type",
            "description": "본인신청과 대리신청을 구별하는 type.\n- SELF: 본인 신청\n- PROXY: 대리 신청"
          },
          "status": {
            "type": "string",
            "enum": ["CANCELED", "DONE", "READY"],
            "title": "Status",
            "description": "Status.\n- READY: 결제 대기중\n- DONE: 결제 완료\n- CANCELED: 결제 취소"
          },
          "competitionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Competition id",
            "description": "Competition id."
          },
          "userId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "User id",
            "description": "User id."
          },
          "playerSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IPlayerSnapshot"
            },
            "minItems": 1,
            "title": "Player snapshots",
            "description": "Player snapshots."
          },
          "participationDivisionInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IParticipationDivisionInfo"
            },
            "minItems": 1,
            "title": "Participation division infos",
            "description": "Participation division infos."
          },
          "additionalInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAdditionalInfo"
            },
            "description": "Addtional infos"
          }
        },
        "nullable": false,
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "type",
          "status",
          "competitionId",
          "userId",
          "playerSnapshots",
          "participationDivisionInfos",
          "additionalInfos"
        ]
      },
      "IPlayerSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "Player name. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "Player name. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "gender": {
            "type": "string",
            "enum": ["FEMALE", "MALE"],
            "title": "Player gender",
            "description": "Player gender."
          },
          "birth": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "title": "Player birth (BirtDate YYYYMMDD)",
            "description": "Player birth (BirtDate YYYYMMDD)."
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "^01[0-9]{9}$",
            "title": "Player phoneNumber. ex) 01012345678",
            "description": "Player phoneNumber. ex) 01012345678."
          },
          "belt": {
            "type": "string",
            "enum": ["브라운", "블랙", "블루", "퍼플", "화이트"],
            "title": "Player belt",
            "description": "Player belt."
          },
          "network": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "주짓수 네트워크. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "주짓수 네트워크. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "team": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "소속 팀. (한글, 영문, 숫자, 공백 입력 가능합니다)",
            "description": "소속 팀. (한글, 영문, 숫자, 공백 입력 가능합니다)."
          },
          "masterName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9ㄱ-ㅎ가-힣 ]{1,64}$",
            "title": "관장님 성함",
            "description": "관장님 성함."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "description": "CreatedAt"
          },
          "applicationId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Application id",
            "description": "Application id."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "name",
          "gender",
          "birth",
          "phoneNumber",
          "belt",
          "network",
          "team",
          "masterName",
          "createdAt",
          "applicationId"
        ]
      },
      "IParticipationDivisionInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "CreatedAt",
            "description": "CreatedAt."
          },
          "applicationId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Application id",
            "description": "Application id."
          },
          "participationDivisionInfoSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IParticipationDivisionInfoSnapshot"
            },
            "minItems": 1,
            "title": "참가부문 정보 스냅샷",
            "description": "참가부문 정보 스냅샷."
          }
        },
        "nullable": false,
        "required": ["id", "createdAt", "applicationId", "participationDivisionInfoSnapshots"]
      },
      "IParticipationDivisionInfoSnapshot": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "description": "CreatedAt"
          },
          "participationDivisionInfoId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "- Participation division Info id",
            "description": "- Participation division Info id."
          },
          "participationDivisionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "- Division id (참가한 부문 id)",
            "description": "- Division id (참가한 부문 id)."
          },
          "division": {
            "$ref": "#/components/schemas/IDivision",
            "title": "- Division. (참가한 부문)",
            "description": "- Division. (참가한 부문)."
          }
        },
        "nullable": false,
        "required": ["id", "createdAt", "participationDivisionInfoId", "participationDivisionId", "division"]
      },
      "IAdditionalInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "ULID",
            "description": "ULID."
          },
          "createdAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "Created at",
            "description": "Created at."
          },
          "updatedAt": {
            "$ref": "#/components/schemas/DateOrStringDate",
            "title": "Updated at",
            "description": "Updated at."
          },
          "type": {
            "type": "string",
            "enum": ["ADDRESS", "SOCIAL_SECURITY_NUMBER"],
            "title": "Type",
            "description": "Type."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "Value."
          },
          "applicationId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "Application id",
            "description": "Application id."
          }
        },
        "nullable": false,
        "required": ["id", "createdAt", "updatedAt", "type", "value", "applicationId"]
      },
      "ResponseFormGetApplicationRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/GetApplicationRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "GetApplicationRes": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/IApplication"
          }
        },
        "nullable": false,
        "required": ["application"]
      },
      "UpdateReadyApplicationReqBody": {
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string",
            "enum": ["PROXY", "SELF"]
          },
          "participationDivisionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 26,
              "minLength": 26
            },
            "minItems": 1,
            "title": "- Division IDs to participate",
            "description": "- Division IDs to participate."
          },
          "playerSnapshotUpdateDto": {
            "$ref": "#/components/schemas/IPlayerSnapshotCreateDto"
          },
          "additionalInfoCreateDtos": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SocialScurityNumberInfo"
                },
                {
                  "$ref": "#/components/schemas/AddressInfo"
                }
              ]
            }
          }
        },
        "nullable": false,
        "required": ["applicationType", "participationDivisionIds", "playerSnapshotUpdateDto"]
      },
      "ResponseFormUpdateReadyApplicationRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/UpdateReadyApplicationRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "UpdateReadyApplicationRes": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/IApplication"
          }
        },
        "nullable": false,
        "required": ["application"]
      },
      "UpdateDoneApplicationReqBody": {
        "type": "object",
        "properties": {
          "participationDivisionInfoUpdateDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IParticipationDivisionInfoUpdateDto"
            },
            "minItems": 1,
            "title": "- Division info update data list",
            "description": "- Division info update data list."
          },
          "playerSnapshotUpdateDto": {
            "$ref": "#/components/schemas/IPlayerSnapshotCreateDto"
          },
          "additionalInfoUpdateDtos": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SocialScurityNumberInfo"
                },
                {
                  "$ref": "#/components/schemas/AddressInfo"
                }
              ]
            }
          }
        },
        "nullable": false
      },
      "IParticipationDivisionInfoUpdateDto": {
        "type": "object",
        "properties": {
          "participationDivisionInfoId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "수정하고자 하는 참가부문 정보 ID (식별자)",
            "description": "수정하고자 하는 참가부문 정보 ID (식별자)."
          },
          "newParticipationDivisionId": {
            "type": "string",
            "maxLength": 26,
            "minLength": 26,
            "title": "새로 참가 하고자 하는 부문 ID",
            "description": "새로 참가 하고자 하는 부문 ID."
          }
        },
        "nullable": false,
        "required": ["participationDivisionInfoId", "newParticipationDivisionId"]
      },
      "ResponseFormUpdateDoneApplicationRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/UpdateDoneApplicationRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "UpdateDoneApplicationRes": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/IApplication"
          }
        },
        "nullable": false,
        "required": ["application"]
      },
      "ResponseFormvoid": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "ResponseFormGetExpectedPaymentRes": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "enum": [true]
          },
          "code": {
            "type": "number",
            "enum": [200]
          },
          "result": {
            "$ref": "#/components/schemas/GetExpectedPaymentRes"
          }
        },
        "nullable": false,
        "required": ["isSuccess", "code"]
      },
      "GetExpectedPaymentRes": {
        "type": "object",
        "properties": {
          "expectedPayment": {
            "$ref": "#/components/schemas/IExpectedPayment"
          }
        },
        "nullable": false,
        "required": ["expectedPayment"]
      },
      "IExpectedPayment": {
        "type": "object",
        "properties": {
          "normalAmount": {
            "type": "integer",
            "minimum": 0
          },
          "earlybirdDiscountAmount": {
            "type": "integer",
            "minimum": 0
          },
          "combinationDiscountAmount": {
            "type": "integer",
            "minimum": 0
          },
          "totalAmount": {
            "type": "integer",
            "minimum": 0
          }
        },
        "nullable": false,
        "required": ["normalAmount", "earlybirdDiscountAmount", "combinationDiscountAmount", "totalAmount"]
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
