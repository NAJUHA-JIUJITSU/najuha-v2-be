{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Server"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "najuha-v2-be",
    "description": "",
    "license": {
      "name": "UNLICENSED"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "2 users"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "created user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUserEntity"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "2-1 create user",
        "description": "2-1 create user. // TODO: api 삭제 예정(유저 생성은 내부적으로만 사용))",
        "x-nestia-namespace": "users.postUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "2 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "created user info",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/users/{userId}": {
      "patch": {
        "tags": [
          "2 users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "description": "",
            "required": true
          }
        ],
        "requestBody": {
          "description": "UpdateUserDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "updated user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseFormUserEntity"
                    },
                    {
                      "$ref": "#/components/schemas/USERS_NOT_FOUND"
                    }
                  ]
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "2-2 update user",
        "description": "2-2 update user.",
        "x-nestia-namespace": "users.patchUser",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "2 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "param",
            "text": [
              {
                "text": "dto",
                "kind": "parameterName"
              },
              {
                "text": " ",
                "kind": "space"
              },
              {
                "text": "UpdateUserDto",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "updated user",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "PATCH"
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "2 users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "me",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormUserEntitynull"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "2-3 get me",
        "description": "2-3 get me.",
        "x-nestia-namespace": "users.me.getMe",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "2 users",
                "kind": "text"
              }
            ]
          },
          {
            "name": "returns",
            "text": [
              {
                "text": "me",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "GET"
      }
    },
    "/auth/snsLogin": {
      "post": {
        "tags": [
          "1 auth"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnsAuthDto"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "accessToken and refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormAuthTokensDto"
                }
              }
            },
            "x-nestia-encrypted": false
          },
          "5000": {
            "description": "SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER"
                }
              }
            }
          },
          "5001": {
            "description": "SNS_AUTH_KAKAO_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_KAKAO_LOGIN_FAIL"
                }
              }
            }
          },
          "5002": {
            "description": "SNS_AUTH_NAVER_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_NAVER_LOGIN_FAIL"
                }
              }
            }
          },
          "5003": {
            "description": "SNS_AUTH_GOOGLE_LOGIN_FAIL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNS_AUTH_GOOGLE_LOGIN_FAIL"
                }
              }
            }
          }
        },
        "summary": "1-1 auth sns login",
        "description": "1-1 auth sns login.",
        "x-nestia-namespace": "auth.snsLogin.snsLogin",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "1 auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "accessToken and refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "1 auth"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          },
          "required": true,
          "x-nestia-encrypted": false
        },
        "responses": {
          "201": {
            "description": "accessToken and refreshToken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseFormAuthTokensDto"
                }
              }
            },
            "x-nestia-encrypted": false
          }
        },
        "summary": "1-2 auth toekn refresh",
        "description": "1-2 auth toekn refresh.",
        "x-nestia-namespace": "auth.refresh.refreshToken",
        "x-nestia-jsDocTags": [
          {
            "name": "tag",
            "text": [
              {
                "text": "1 auth",
                "kind": "text"
              }
            ]
          },
          {
            "name": "return",
            "text": [
              {
                "text": "accessToken and refreshToken",
                "kind": "text"
              }
            ]
          }
        ],
        "x-nestia-method": "POST"
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "snsId": {
            "type": "string",
            "description": "- SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "snsAuthProvider": {
            "type": "string",
            "enum": [
              "KAKAO",
              "NAVER",
              "GOOGLE",
              "APPLE"
            ],
            "description": "- SNS 공급자. 사용자가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 이름."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "description": "- 사용자 이메일 주소 (일단 필요없으나 수집이 쉽고, 추후에 필요할수도 있으니 일단 넣어둠)."
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "description": "- 사용자 전화번호. 국제전화번호 E.164 규격을 따릅니다. ex) +821012345678."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "nullable": true,
            "description": "사용자 성별."
          }
        },
        "nullable": false,
        "required": [
          "snsId",
          "snsAuthProvider",
          "name",
          "email",
          "phoneNumber",
          "gender"
        ]
      },
      "ResponseFormUserEntity": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "code": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/UserEntity"
          }
        },
        "nullable": false,
        "required": [
          "result",
          "code",
          "data"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "- 사용자 ID. 데이터베이스에서 자동 생성됩니다."
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "TEMPORARY_USER"
            ],
            "description": "- 사용자 역할. 사용자의 접근 권한을 나타냅니다."
          },
          "snsAuthProvider": {
            "type": "string",
            "enum": [
              "KAKAO",
              "NAVER",
              "GOOGLE",
              "APPLE"
            ],
            "description": "- SNS 공급자. 사용자가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "snsId": {
            "type": "string",
            "description": "- SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "description": "- 사용자 이메일 주소 (일단 필요없으나 수집이 쉽고, 추후에 필요할수도 있으니 일단 넣어둠)."
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 이름."
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "description": "- 사용자 전화번호. 국제전화번호 E.164 규격을 따릅니다. ex) +821012345678."
          },
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "description": "사용자 별명."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "nullable": true,
            "description": "사용자 성별."
          },
          "belt": {
            "type": "string",
            "enum": [
              "화이트",
              "블루",
              "퍼플",
              "브라운",
              "블랙"
            ],
            "nullable": true,
            "description": "사용자 주짓수 벨트."
          },
          "weight": {
            "type": "number",
            "nullable": true,
            "description": "사용자 체중."
          },
          "profileImageUrlKey": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 프로필 이미지 키. (썸네일 이미지 역할)\n- 참고 s3 image key 최대길이 (https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html)."
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "description": "- 사용자 상태. 활성, 비활성 등을 나타냅니다."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "- 생성 시간. 데이터베이스에 엔티티가 처음 저장될 때 자동으로 설정됩니다."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "- 최종 업데이트 시간. 엔티티가 수정될 때마다 자동으로 업데이트됩니다."
          }
        },
        "nullable": false,
        "required": [
          "id",
          "role",
          "snsAuthProvider",
          "snsId",
          "email",
          "name",
          "phoneNumber",
          "nickname",
          "gender",
          "belt",
          "weight",
          "profileImageUrlKey",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "description": "- 각 snsAuthProvider 마다 제공되는 정보.\n- kakao  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- naver  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- google : snsId, email.\n- apple  : snsId, email, name."
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 이름."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "description": "- 사용자 이메일 주소 (일단 필요없으나 수집이 쉽고, 추후에 필요할수도 있으니 일단 넣어둠)."
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "description": "- 사용자 전화번호. 국제전화번호 E.164 규격을 따릅니다. ex) +821012345678."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "nullable": true,
            "description": "사용자 성별."
          },
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "description": "사용자 별명."
          },
          "belt": {
            "type": "string",
            "enum": [
              "화이트",
              "블루",
              "퍼플",
              "브라운",
              "블랙"
            ],
            "nullable": true,
            "description": "사용자 주짓수 벨트."
          },
          "weight": {
            "type": "number",
            "nullable": true,
            "description": "사용자 체중."
          }
        },
        "nullable": false
      },
      "USERS_NOT_FOUND": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              404
            ]
          },
          "code": {
            "type": "number",
            "enum": [
              6001
            ]
          },
          "data": {
            "type": "string",
            "enum": [
              "존재하지 않는 유저입니다."
            ]
          },
          "detail": {}
        },
        "nullable": false,
        "required": [
          "result",
          "status",
          "code",
          "data"
        ],
        "description": "----------------------------------------------------------------------------\nUsers 6000 ~ 6999"
      },
      "ResponseFormUserEntitynull": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "code": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/UserEntity.Nullable"
          }
        },
        "nullable": false,
        "required": [
          "result",
          "code",
          "data"
        ]
      },
      "UserEntity.Nullable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "- 사용자 ID. 데이터베이스에서 자동 생성됩니다."
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "TEMPORARY_USER"
            ],
            "description": "- 사용자 역할. 사용자의 접근 권한을 나타냅니다."
          },
          "snsAuthProvider": {
            "type": "string",
            "enum": [
              "KAKAO",
              "NAVER",
              "GOOGLE",
              "APPLE"
            ],
            "description": "- SNS 공급자. 사용자가 로그인하는데 사용한 SNS 플랫폼을 나타냅니다."
          },
          "snsId": {
            "type": "string",
            "description": "- SNS ID. 소셜 로그인을 위한 고유 식별자입니다."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 320,
            "minLength": 1,
            "description": "- 사용자 이메일 주소 (일단 필요없으나 수집이 쉽고, 추후에 필요할수도 있으니 일단 넣어둠)."
          },
          "name": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 이름."
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true,
            "description": "- 사용자 전화번호. 국제전화번호 E.164 규격을 따릅니다. ex) +821012345678."
          },
          "nickname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "nullable": true,
            "description": "사용자 별명."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ],
            "nullable": true,
            "description": "사용자 성별."
          },
          "belt": {
            "type": "string",
            "enum": [
              "화이트",
              "블루",
              "퍼플",
              "브라운",
              "블랙"
            ],
            "nullable": true,
            "description": "사용자 주짓수 벨트."
          },
          "weight": {
            "type": "number",
            "nullable": true,
            "description": "사용자 체중."
          },
          "profileImageUrlKey": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "nullable": true,
            "description": "- 사용자 프로필 이미지 키. (썸네일 이미지 역할)\n- 참고 s3 image key 최대길이 (https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html)."
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "description": "- 사용자 상태. 활성, 비활성 등을 나타냅니다."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "- 생성 시간. 데이터베이스에 엔티티가 처음 저장될 때 자동으로 설정됩니다."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "- 최종 업데이트 시간. 엔티티가 수정될 때마다 자동으로 업데이트됩니다."
          }
        },
        "nullable": true,
        "required": [
          "id",
          "role",
          "snsAuthProvider",
          "snsId",
          "email",
          "name",
          "phoneNumber",
          "nickname",
          "gender",
          "belt",
          "weight",
          "profileImageUrlKey",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "description": "- 각 snsAuthProvider 마다 제공되는 정보.\n- kakao  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- naver  : snsId, email, name, phoneNumber, gender, birthday, birthyear.\n- google : snsId, email.\n- apple  : snsId, email, name."
      },
      "SnsAuthDto": {
        "type": "object",
        "properties": {
          "snsAuthProvider": {
            "type": "string",
            "enum": [
              "KAKAO",
              "NAVER",
              "GOOGLE",
              "APPLE"
            ],
            "description": "snsProvider."
          },
          "snsAuthCode": {
            "type": "string",
            "description": "authCode."
          }
        },
        "nullable": false,
        "required": [
          "snsAuthProvider",
          "snsAuthCode"
        ]
      },
      "SNS_AUTH_NOT_SUPPORTED_SNS_PROVIDER": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              400
            ]
          },
          "code": {
            "type": "number",
            "enum": [
              5000
            ]
          },
          "data": {
            "type": "string",
            "enum": [
              "지원하지 않는 SNS AUTH PROVIDER 입니다."
            ]
          },
          "detail": {}
        },
        "nullable": false,
        "required": [
          "result",
          "status",
          "code",
          "data"
        ],
        "description": "----------------------------------------------------------------------------\nSnsAuth 5000 ~ 5999"
      },
      "SNS_AUTH_KAKAO_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              400
            ]
          },
          "code": {
            "type": "number",
            "enum": [
              5001
            ]
          },
          "data": {
            "type": "string",
            "enum": [
              "카카오 로그인에 실패했습니다."
            ]
          },
          "detail": {}
        },
        "nullable": false,
        "required": [
          "result",
          "status",
          "code",
          "data"
        ]
      },
      "SNS_AUTH_NAVER_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              400
            ]
          },
          "code": {
            "type": "number",
            "enum": [
              5002
            ]
          },
          "data": {
            "type": "string",
            "enum": [
              "네이버 로그인에 실패했습니다."
            ]
          },
          "detail": {}
        },
        "nullable": false,
        "required": [
          "result",
          "status",
          "code",
          "data"
        ]
      },
      "SNS_AUTH_GOOGLE_LOGIN_FAIL": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              400
            ]
          },
          "code": {
            "type": "number",
            "enum": [
              5003
            ]
          },
          "data": {
            "type": "string",
            "enum": [
              "구글 로그인에 실패했습니다."
            ]
          },
          "detail": {}
        },
        "nullable": false,
        "required": [
          "result",
          "status",
          "code",
          "data"
        ]
      },
      "ResponseFormAuthTokensDto": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "code": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/AuthTokensDto"
          }
        },
        "nullable": false,
        "required": [
          "result",
          "code",
          "data"
        ]
      },
      "AuthTokensDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "nullable": false,
        "required": [
          "refreshToken"
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}