/**
 * @packageDocumentation
 * @module api.functional.auth.kakao
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { KakaoLogin } from "../../../../auth/auth.controller";
import type { AuthSnsLoginDto } from "../../../../auth/dto/auth-sns-login.dto";

/**
 * 1-1 auth sns login.
 * 
 * @tag auth
 * @return KakaoLogin
 * 
 * @controller AuthController.kakaoLogin
 * @path POST /auth/kakao
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function kakaoLogin(
    connection: IConnection,
    dto: kakaoLogin.Input,
): Promise<kakaoLogin.Output> {
    return PlainFetcher.fetch(
        {
            ...connection,
            headers: {
                ...(connection.headers ?? {}),
                "Content-Type": "application/json",
            },
        },
        {
            ...kakaoLogin.METADATA,
            path: kakaoLogin.path(),
        } as const,
        dto,
    );
}
export namespace kakaoLogin {
    export type Input = Primitive<AuthSnsLoginDto>;
    export type Output = Primitive<KakaoLogin>;

    export const METADATA = {
        method: "POST",
        path: "/auth/kakao",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    } as const;

    export const path = (): string => {
        return `/auth/kakao`;
    }
}